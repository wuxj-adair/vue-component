// {
//   "compilerOptions": {
//     /* Visit https://aka.ms/tsconfig.json to read more about this file */

//     /* Basic Options */
//     // "incremental": true,                   /* Enable incremental compilation */
//     "target": "es5",                          /* Specify ECMAScript target version: 'ES3' (default), 'ES5', 'ES2015', 'ES2016', 'ES2017', 'ES2018', 'ES2019', 'ES2020', or 'ESNEXT'. */
//     "module": "commonjs",                     /* Specify module code generation: 'none', 'commonjs', 'amd', 'system', 'umd', 'es2015', 'es2020', or 'ESNext'. */
//     // "lib": [],                             /* Specify library files to be included in the compilation. */
//     // "allowJs": true,                       /* Allow javascript files to be compiled. */
//     // "checkJs": true,                       /* Report errors in .js files. */
//     // "jsx": "preserve",                     /* Specify JSX code generation: 'preserve', 'react-native', or 'react'. */
//     // "declaration": true,                   /* Generates corresponding '.d.ts' file. */
//     // "declarationMap": true,                /* Generates a sourcemap for each corresponding '.d.ts' file. */
//     // "sourceMap": true,                     /* Generates corresponding '.map' file. */
//     // "outFile": "./",                       /* Concatenate and emit output to single file. */
//     // "outDir": "./",                        /* Redirect output structure to the directory. */
//     // "rootDir": "./",                       /* Specify the root directory of input files. Use to control the output directory structure with --outDir. */
//     // "composite": true,                     /* Enable project compilation */
//     // "tsBuildInfoFile": "./",               /* Specify file to store incremental compilation information */
//     // "removeComments": true,                /* Do not emit comments to output. */
//     // "noEmit": true,                        /* Do not emit outputs. */
//     // "importHelpers": true,                 /* Import emit helpers from 'tslib'. */
//     // "downlevelIteration": true,            /* Provide full support for iterables in 'for-of', spread, and destructuring when targeting 'ES5' or 'ES3'. */
//     // "isolatedModules": true,               /* Transpile each file as a separate module (similar to 'ts.transpileModule'). */

//     /* Strict Type-Checking Options */
//     "strict": true,                           /* Enable all strict type-checking options. */
//     // "noImplicitAny": true,                 /* Raise error on expressions and declarations with an implied 'any' type. */
//     // "strictNullChecks": true,              /* Enable strict null checks. */
//     // "strictFunctionTypes": true,           /* Enable strict checking of function types. */
//     // "strictBindCallApply": true,           /* Enable strict 'bind', 'call', and 'apply' methods on functions. */
//     // "strictPropertyInitialization": true,  /* Enable strict checking of property initialization in classes. */
//     // "noImplicitThis": true,                /* Raise error on 'this' expressions with an implied 'any' type. */
//     // "alwaysStrict": true,                  /* Parse in strict mode and emit "use strict" for each source file. */

//     /* Additional Checks */
//     // "noUnusedLocals": true,                /* Report errors on unused locals. */
//     // "noUnusedParameters": true,            /* Report errors on unused parameters. */
//     // "noImplicitReturns": true,             /* Report error when not all code paths in function return a value. */
//     // "noFallthroughCasesInSwitch": true,    /* Report errors for fallthrough cases in switch statement. */

//     /* Module Resolution Options */
//     // "moduleResolution": "node",            /* Specify module resolution strategy: 'node' (Node.js) or 'classic' (TypeScript pre-1.6). */
//     // "baseUrl": "./",                       /* Base directory to resolve non-absolute module names. */
//     // "paths": {},                           /* A series of entries which re-map imports to lookup locations relative to the 'baseUrl'. */
//     // "rootDirs": [],                        /* List of root folders whose combined content represents the structure of the project at runtime. */
//     // "typeRoots": [],                       /* List of folders to include type definitions from. */
//     // "types": [],                           /* Type declaration files to be included in compilation. */
//     // "allowSyntheticDefaultImports": true,  /* Allow default imports from modules with no default export. This does not affect code emit, just typechecking. */
//     "esModuleInterop": true,                  /* Enables emit interoperability between CommonJS and ES Modules via creation of namespace objects for all imports. Implies 'allowSyntheticDefaultImports'. */
//     // "preserveSymlinks": true,              /* Do not resolve the real path of symlinks. */
//     // "allowUmdGlobalAccess": true,          /* Allow accessing UMD globals from modules. */

//     /* Source Map Options */
//     // "sourceRoot": "",                      /* Specify the location where debugger should locate TypeScript files instead of source locations. */
//     // "mapRoot": "",                         /* Specify the location where debugger should locate map files instead of generated locations. */
//     // "inlineSourceMap": true,               /* Emit a single file with source maps instead of having a separate file. */
//     // "inlineSources": true,                 /* Emit the source alongside the sourcemaps within a single file; requires '--inlineSourceMap' or '--sourceMap' to be set. */

//     /* Experimental Options */
//     // "experimentalDecorators": true,        /* Enables experimental support for ES7 decorators. */
//     // "emitDecoratorMetadata": true,         /* Enables experimental support for emitting type metadata for decorators. */

//     /* Advanced Options */
//     "skipLibCheck": true,                     /* Skip type checking of declaration files. */
//     "forceConsistentCasingInFileNames": true  /* Disallow inconsistently-cased references to the same file. */
//   }
// }

{
  "compilerOptions": {
    "target": "es5",                            // 指定 ECMAScript 目标版本: 'ES5'
    "module": "commonjs",                       // 指定使用模块: 'commonjs', 'amd', 'system', 'umd' or 'es2015'
    "moduleResolution": "node",                 // 选择模块解析策略
    "experimentalDecorators": true,             // 启用实验性的ES装饰器
    "allowSyntheticDefaultImports": true,       // 允许从没有设置默认导出的模块中默认导入。
    "sourceMap": true,                          // 把 ts 文件编译成 js 文件的时候，同时生成对应的 map 文件
    "strict": true,                             // 启用所有严格类型检查选项
    "noImplicitAny": true,                      // 在表达式和声明上有隐含的 any类型时报错
    "alwaysStrict": true,                       // 以严格模式检查模块，并在每个文件里加入 'use strict'
    "declaration": true,                        // 生成相应的.d.ts文件
    "removeComments": true,                     // 删除编译后的所有的注释
    "noImplicitReturns": true,                  // 不是函数的所有返回路径都有返回值时报错
    "importHelpers": true,                      // 从 tslib 导入辅助工具函数
    "lib": ["es6", "dom"],                      // 指定要包含在编译中的库文件
    "typeRoots": ["node_modules/@types"],
    "outDir": "./dist",
    "rootDir": "./src"
  },
  "include": [                                  // 需要编译的ts文件一个*表示文件匹配**表示忽略文件的深度问题
    "./src/**/*.ts"
  ],
  "exclude": [
    "node_modules",
    "dist",
    "**/*.test.ts",
  ]
}